/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 61.1.4
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the IDSyncConfigurationInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IDSyncConfigurationInput{}

// IDSyncConfigurationInput The identifier sync configuration input.
type IDSyncConfigurationInput struct {
	// The external id to sync, for example \"user_id\" or \"email\".
	ExternalId string `json:"externalId"`
	// The strategy for syncing this identifier. Valid values: \"first\", \"last\", \"all\".
	Strategy string `json:"strategy"`
}

// NewIDSyncConfigurationInput instantiates a new IDSyncConfigurationInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIDSyncConfigurationInput(externalId string, strategy string) *IDSyncConfigurationInput {
	this := IDSyncConfigurationInput{}
	this.ExternalId = externalId
	this.Strategy = strategy
	return &this
}

// NewIDSyncConfigurationInputWithDefaults instantiates a new IDSyncConfigurationInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIDSyncConfigurationInputWithDefaults() *IDSyncConfigurationInput {
	this := IDSyncConfigurationInput{}
	return &this
}

// GetExternalId returns the ExternalId field value
func (o *IDSyncConfigurationInput) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *IDSyncConfigurationInput) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *IDSyncConfigurationInput) SetExternalId(v string) {
	o.ExternalId = v
}

// GetStrategy returns the Strategy field value
func (o *IDSyncConfigurationInput) GetStrategy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value
// and a boolean to check if the value has been set.
func (o *IDSyncConfigurationInput) GetStrategyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Strategy, true
}

// SetStrategy sets field value
func (o *IDSyncConfigurationInput) SetStrategy(v string) {
	o.Strategy = v
}

func (o IDSyncConfigurationInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IDSyncConfigurationInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["externalId"] = o.ExternalId
	toSerialize["strategy"] = o.Strategy
	return toSerialize, nil
}

type NullableIDSyncConfigurationInput struct {
	value *IDSyncConfigurationInput
	isSet bool
}

func (v NullableIDSyncConfigurationInput) Get() *IDSyncConfigurationInput {
	return v.value
}

func (v *NullableIDSyncConfigurationInput) Set(val *IDSyncConfigurationInput) {
	v.value = val
	v.isSet = true
}

func (v NullableIDSyncConfigurationInput) IsSet() bool {
	return v.isSet
}

func (v *NullableIDSyncConfigurationInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIDSyncConfigurationInput(
	val *IDSyncConfigurationInput,
) *NullableIDSyncConfigurationInput {
	return &NullableIDSyncConfigurationInput{value: val, isSet: true}
}

func (v NullableIDSyncConfigurationInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIDSyncConfigurationInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
