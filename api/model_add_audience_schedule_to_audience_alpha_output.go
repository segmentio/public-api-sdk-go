/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 61.1.4
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the AddAudienceScheduleToAudienceAlphaOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddAudienceScheduleToAudienceAlphaOutput{}

// AddAudienceScheduleToAudienceAlphaOutput Defines the output of creating an audience schedule.
type AddAudienceScheduleToAudienceAlphaOutput struct {
	AudienceSchedule AudienceSchedule `json:"audienceSchedule"`
}

// NewAddAudienceScheduleToAudienceAlphaOutput instantiates a new AddAudienceScheduleToAudienceAlphaOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddAudienceScheduleToAudienceAlphaOutput(
	audienceSchedule AudienceSchedule,
) *AddAudienceScheduleToAudienceAlphaOutput {
	this := AddAudienceScheduleToAudienceAlphaOutput{}
	this.AudienceSchedule = audienceSchedule
	return &this
}

// NewAddAudienceScheduleToAudienceAlphaOutputWithDefaults instantiates a new AddAudienceScheduleToAudienceAlphaOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddAudienceScheduleToAudienceAlphaOutputWithDefaults() *AddAudienceScheduleToAudienceAlphaOutput {
	this := AddAudienceScheduleToAudienceAlphaOutput{}
	return &this
}

// GetAudienceSchedule returns the AudienceSchedule field value
func (o *AddAudienceScheduleToAudienceAlphaOutput) GetAudienceSchedule() AudienceSchedule {
	if o == nil {
		var ret AudienceSchedule
		return ret
	}

	return o.AudienceSchedule
}

// GetAudienceScheduleOk returns a tuple with the AudienceSchedule field value
// and a boolean to check if the value has been set.
func (o *AddAudienceScheduleToAudienceAlphaOutput) GetAudienceScheduleOk() (*AudienceSchedule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AudienceSchedule, true
}

// SetAudienceSchedule sets field value
func (o *AddAudienceScheduleToAudienceAlphaOutput) SetAudienceSchedule(v AudienceSchedule) {
	o.AudienceSchedule = v
}

func (o AddAudienceScheduleToAudienceAlphaOutput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddAudienceScheduleToAudienceAlphaOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["audienceSchedule"] = o.AudienceSchedule
	return toSerialize, nil
}

type NullableAddAudienceScheduleToAudienceAlphaOutput struct {
	value *AddAudienceScheduleToAudienceAlphaOutput
	isSet bool
}

func (v NullableAddAudienceScheduleToAudienceAlphaOutput) Get() *AddAudienceScheduleToAudienceAlphaOutput {
	return v.value
}

func (v *NullableAddAudienceScheduleToAudienceAlphaOutput) Set(
	val *AddAudienceScheduleToAudienceAlphaOutput,
) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAudienceScheduleToAudienceAlphaOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAudienceScheduleToAudienceAlphaOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAudienceScheduleToAudienceAlphaOutput(
	val *AddAudienceScheduleToAudienceAlphaOutput,
) *NullableAddAudienceScheduleToAudienceAlphaOutput {
	return &NullableAddAudienceScheduleToAudienceAlphaOutput{value: val, isSet: true}
}

func (v NullableAddAudienceScheduleToAudienceAlphaOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAudienceScheduleToAudienceAlphaOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
