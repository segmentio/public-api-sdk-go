/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 62.0.0
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PersonalizationInputEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PersonalizationInputEntity{}

// PersonalizationInputEntity The Personalization Input Entity.
type PersonalizationInputEntity struct {
	Properties []string `json:"properties"`
	// The relationship slug for the entity.
	RelationshipSlug string `json:"relationshipSlug"`
}

// NewPersonalizationInputEntity instantiates a new PersonalizationInputEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersonalizationInputEntity(
	properties []string,
	relationshipSlug string,
) *PersonalizationInputEntity {
	this := PersonalizationInputEntity{}
	this.Properties = properties
	this.RelationshipSlug = relationshipSlug
	return &this
}

// NewPersonalizationInputEntityWithDefaults instantiates a new PersonalizationInputEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersonalizationInputEntityWithDefaults() *PersonalizationInputEntity {
	this := PersonalizationInputEntity{}
	return &this
}

// GetProperties returns the Properties field value
func (o *PersonalizationInputEntity) GetProperties() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
func (o *PersonalizationInputEntity) GetPropertiesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Properties, true
}

// SetProperties sets field value
func (o *PersonalizationInputEntity) SetProperties(v []string) {
	o.Properties = v
}

// GetRelationshipSlug returns the RelationshipSlug field value
func (o *PersonalizationInputEntity) GetRelationshipSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RelationshipSlug
}

// GetRelationshipSlugOk returns a tuple with the RelationshipSlug field value
// and a boolean to check if the value has been set.
func (o *PersonalizationInputEntity) GetRelationshipSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelationshipSlug, true
}

// SetRelationshipSlug sets field value
func (o *PersonalizationInputEntity) SetRelationshipSlug(v string) {
	o.RelationshipSlug = v
}

func (o PersonalizationInputEntity) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PersonalizationInputEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["properties"] = o.Properties
	toSerialize["relationshipSlug"] = o.RelationshipSlug
	return toSerialize, nil
}

type NullablePersonalizationInputEntity struct {
	value *PersonalizationInputEntity
	isSet bool
}

func (v NullablePersonalizationInputEntity) Get() *PersonalizationInputEntity {
	return v.value
}

func (v *NullablePersonalizationInputEntity) Set(val *PersonalizationInputEntity) {
	v.value = val
	v.isSet = true
}

func (v NullablePersonalizationInputEntity) IsSet() bool {
	return v.isSet
}

func (v *NullablePersonalizationInputEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersonalizationInputEntity(
	val *PersonalizationInputEntity,
) *NullablePersonalizationInputEntity {
	return &NullablePersonalizationInputEntity{value: val, isSet: true}
}

func (v NullablePersonalizationInputEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersonalizationInputEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
