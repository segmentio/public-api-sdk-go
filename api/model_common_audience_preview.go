/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 58.7.0
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the CommonAudiencePreview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonAudiencePreview{}

// CommonAudiencePreview Fields common to an audience preview regardless of the status.
type CommonAudiencePreview struct {
	// Unique identifier for tracking and retrieving results of an audience preview.
	Id string `json:"id"`
	// The audience type of the preview.
	AudienceType string                        `json:"audienceType"`
	Definition   AudienceDefinitionWithoutType `json:"definition"`
	Options      AudienceOptionsWithLookback   `json:"options"`
}

// NewCommonAudiencePreview instantiates a new CommonAudiencePreview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonAudiencePreview(
	id string,
	audienceType string,
	definition AudienceDefinitionWithoutType,
	options AudienceOptionsWithLookback,
) *CommonAudiencePreview {
	this := CommonAudiencePreview{}
	this.Id = id
	this.AudienceType = audienceType
	this.Definition = definition
	this.Options = options
	return &this
}

// NewCommonAudiencePreviewWithDefaults instantiates a new CommonAudiencePreview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonAudiencePreviewWithDefaults() *CommonAudiencePreview {
	this := CommonAudiencePreview{}
	return &this
}

// GetId returns the Id field value
func (o *CommonAudiencePreview) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CommonAudiencePreview) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CommonAudiencePreview) SetId(v string) {
	o.Id = v
}

// GetAudienceType returns the AudienceType field value
func (o *CommonAudiencePreview) GetAudienceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AudienceType
}

// GetAudienceTypeOk returns a tuple with the AudienceType field value
// and a boolean to check if the value has been set.
func (o *CommonAudiencePreview) GetAudienceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AudienceType, true
}

// SetAudienceType sets field value
func (o *CommonAudiencePreview) SetAudienceType(v string) {
	o.AudienceType = v
}

// GetDefinition returns the Definition field value
func (o *CommonAudiencePreview) GetDefinition() AudienceDefinitionWithoutType {
	if o == nil {
		var ret AudienceDefinitionWithoutType
		return ret
	}

	return o.Definition
}

// GetDefinitionOk returns a tuple with the Definition field value
// and a boolean to check if the value has been set.
func (o *CommonAudiencePreview) GetDefinitionOk() (*AudienceDefinitionWithoutType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Definition, true
}

// SetDefinition sets field value
func (o *CommonAudiencePreview) SetDefinition(v AudienceDefinitionWithoutType) {
	o.Definition = v
}

// GetOptions returns the Options field value
func (o *CommonAudiencePreview) GetOptions() AudienceOptionsWithLookback {
	if o == nil {
		var ret AudienceOptionsWithLookback
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *CommonAudiencePreview) GetOptionsOk() (*AudienceOptionsWithLookback, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Options, true
}

// SetOptions sets field value
func (o *CommonAudiencePreview) SetOptions(v AudienceOptionsWithLookback) {
	o.Options = v
}

func (o CommonAudiencePreview) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonAudiencePreview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["audienceType"] = o.AudienceType
	toSerialize["definition"] = o.Definition
	toSerialize["options"] = o.Options
	return toSerialize, nil
}

type NullableCommonAudiencePreview struct {
	value *CommonAudiencePreview
	isSet bool
}

func (v NullableCommonAudiencePreview) Get() *CommonAudiencePreview {
	return v.value
}

func (v *NullableCommonAudiencePreview) Set(val *CommonAudiencePreview) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonAudiencePreview) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonAudiencePreview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonAudiencePreview(val *CommonAudiencePreview) *NullableCommonAudiencePreview {
	return &NullableCommonAudiencePreview{value: val, isSet: true}
}

func (v NullableCommonAudiencePreview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonAudiencePreview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
