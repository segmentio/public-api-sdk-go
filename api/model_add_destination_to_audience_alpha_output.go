/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 58.14.0
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the AddDestinationToAudienceAlphaOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddDestinationToAudienceAlphaOutput{}

// AddDestinationToAudienceAlphaOutput struct for AddDestinationToAudienceAlphaOutput
type AddDestinationToAudienceAlphaOutput struct {
	Connection Connection `json:"connection"`
}

// NewAddDestinationToAudienceAlphaOutput instantiates a new AddDestinationToAudienceAlphaOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddDestinationToAudienceAlphaOutput(
	connection Connection,
) *AddDestinationToAudienceAlphaOutput {
	this := AddDestinationToAudienceAlphaOutput{}
	this.Connection = connection
	return &this
}

// NewAddDestinationToAudienceAlphaOutputWithDefaults instantiates a new AddDestinationToAudienceAlphaOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddDestinationToAudienceAlphaOutputWithDefaults() *AddDestinationToAudienceAlphaOutput {
	this := AddDestinationToAudienceAlphaOutput{}
	return &this
}

// GetConnection returns the Connection field value
func (o *AddDestinationToAudienceAlphaOutput) GetConnection() Connection {
	if o == nil {
		var ret Connection
		return ret
	}

	return o.Connection
}

// GetConnectionOk returns a tuple with the Connection field value
// and a boolean to check if the value has been set.
func (o *AddDestinationToAudienceAlphaOutput) GetConnectionOk() (*Connection, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Connection, true
}

// SetConnection sets field value
func (o *AddDestinationToAudienceAlphaOutput) SetConnection(v Connection) {
	o.Connection = v
}

func (o AddDestinationToAudienceAlphaOutput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddDestinationToAudienceAlphaOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["connection"] = o.Connection
	return toSerialize, nil
}

type NullableAddDestinationToAudienceAlphaOutput struct {
	value *AddDestinationToAudienceAlphaOutput
	isSet bool
}

func (v NullableAddDestinationToAudienceAlphaOutput) Get() *AddDestinationToAudienceAlphaOutput {
	return v.value
}

func (v *NullableAddDestinationToAudienceAlphaOutput) Set(
	val *AddDestinationToAudienceAlphaOutput,
) {
	v.value = val
	v.isSet = true
}

func (v NullableAddDestinationToAudienceAlphaOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableAddDestinationToAudienceAlphaOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddDestinationToAudienceAlphaOutput(
	val *AddDestinationToAudienceAlphaOutput,
) *NullableAddDestinationToAudienceAlphaOutput {
	return &NullableAddDestinationToAudienceAlphaOutput{value: val, isSet: true}
}

func (v NullableAddDestinationToAudienceAlphaOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddDestinationToAudienceAlphaOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
