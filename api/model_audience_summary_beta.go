/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 58.1.1
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the AudienceSummaryBeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AudienceSummaryBeta{}

// AudienceSummaryBeta Defines an Audience.
type AudienceSummaryBeta struct {
	// Audience id.
	Id string `json:"id"`
	// Space id for the audience.
	SpaceId string `json:"spaceId"`
	// Name of the audience.
	Name string `json:"name"`
	// Description of the audience.
	Description *string `json:"description,omitempty"`
	// Key for the audience.
	Key string `json:"key"`
	// Enabled/disabled status for the audience.
	Enabled    bool                           `json:"enabled"`
	Definition NullableAudienceDefinitionBeta `json:"definition"`
	// Status for the audience.  Possible values: Backfilling, Computing, Failed, Live, Awaiting Destinations, Disabled.
	Status *string `json:"status,omitempty"`
	// User id who created the audience.
	CreatedBy string `json:"createdBy"`
	// User id who last updated the audience.
	UpdatedBy string `json:"updatedBy"`
	// Date the audience was created.
	CreatedAt string `json:"createdAt"`
	// Date the audience was last updated.
	UpdatedAt string               `json:"updatedAt"`
	Options   *AudienceOptionsBeta `json:"options,omitempty"`
}

// NewAudienceSummaryBeta instantiates a new AudienceSummaryBeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudienceSummaryBeta(
	id string,
	spaceId string,
	name string,
	key string,
	enabled bool,
	definition NullableAudienceDefinitionBeta,
	createdBy string,
	updatedBy string,
	createdAt string,
	updatedAt string,
) *AudienceSummaryBeta {
	this := AudienceSummaryBeta{}
	this.Id = id
	this.SpaceId = spaceId
	this.Name = name
	this.Key = key
	this.Enabled = enabled
	this.Definition = definition
	this.CreatedBy = createdBy
	this.UpdatedBy = updatedBy
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewAudienceSummaryBetaWithDefaults instantiates a new AudienceSummaryBeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudienceSummaryBetaWithDefaults() *AudienceSummaryBeta {
	this := AudienceSummaryBeta{}
	return &this
}

// GetId returns the Id field value
func (o *AudienceSummaryBeta) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AudienceSummaryBeta) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AudienceSummaryBeta) SetId(v string) {
	o.Id = v
}

// GetSpaceId returns the SpaceId field value
func (o *AudienceSummaryBeta) GetSpaceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SpaceId
}

// GetSpaceIdOk returns a tuple with the SpaceId field value
// and a boolean to check if the value has been set.
func (o *AudienceSummaryBeta) GetSpaceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpaceId, true
}

// SetSpaceId sets field value
func (o *AudienceSummaryBeta) SetSpaceId(v string) {
	o.SpaceId = v
}

// GetName returns the Name field value
func (o *AudienceSummaryBeta) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AudienceSummaryBeta) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AudienceSummaryBeta) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AudienceSummaryBeta) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceSummaryBeta) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AudienceSummaryBeta) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AudienceSummaryBeta) SetDescription(v string) {
	o.Description = &v
}

// GetKey returns the Key field value
func (o *AudienceSummaryBeta) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *AudienceSummaryBeta) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *AudienceSummaryBeta) SetKey(v string) {
	o.Key = v
}

// GetEnabled returns the Enabled field value
func (o *AudienceSummaryBeta) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AudienceSummaryBeta) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AudienceSummaryBeta) SetEnabled(v bool) {
	o.Enabled = v
}

// GetDefinition returns the Definition field value
// If the value is explicit nil, the zero value for AudienceDefinitionBeta will be returned
func (o *AudienceSummaryBeta) GetDefinition() AudienceDefinitionBeta {
	if o == nil || o.Definition.Get() == nil {
		var ret AudienceDefinitionBeta
		return ret
	}

	return *o.Definition.Get()
}

// GetDefinitionOk returns a tuple with the Definition field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AudienceSummaryBeta) GetDefinitionOk() (*AudienceDefinitionBeta, bool) {
	if o == nil {
		return nil, false
	}
	return o.Definition.Get(), o.Definition.IsSet()
}

// SetDefinition sets field value
func (o *AudienceSummaryBeta) SetDefinition(v AudienceDefinitionBeta) {
	o.Definition.Set(&v)
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AudienceSummaryBeta) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceSummaryBeta) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AudienceSummaryBeta) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AudienceSummaryBeta) SetStatus(v string) {
	o.Status = &v
}

// GetCreatedBy returns the CreatedBy field value
func (o *AudienceSummaryBeta) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *AudienceSummaryBeta) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *AudienceSummaryBeta) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetUpdatedBy returns the UpdatedBy field value
func (o *AudienceSummaryBeta) GetUpdatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value
// and a boolean to check if the value has been set.
func (o *AudienceSummaryBeta) GetUpdatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedBy, true
}

// SetUpdatedBy sets field value
func (o *AudienceSummaryBeta) SetUpdatedBy(v string) {
	o.UpdatedBy = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AudienceSummaryBeta) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AudienceSummaryBeta) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AudienceSummaryBeta) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *AudienceSummaryBeta) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *AudienceSummaryBeta) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *AudienceSummaryBeta) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *AudienceSummaryBeta) GetOptions() AudienceOptionsBeta {
	if o == nil || IsNil(o.Options) {
		var ret AudienceOptionsBeta
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceSummaryBeta) GetOptionsOk() (*AudienceOptionsBeta, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *AudienceSummaryBeta) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given AudienceOptionsBeta and assigns it to the Options field.
func (o *AudienceSummaryBeta) SetOptions(v AudienceOptionsBeta) {
	o.Options = &v
}

func (o AudienceSummaryBeta) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AudienceSummaryBeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["spaceId"] = o.SpaceId
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["key"] = o.Key
	toSerialize["enabled"] = o.Enabled
	toSerialize["definition"] = o.Definition.Get()
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["updatedBy"] = o.UpdatedBy
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	return toSerialize, nil
}

type NullableAudienceSummaryBeta struct {
	value *AudienceSummaryBeta
	isSet bool
}

func (v NullableAudienceSummaryBeta) Get() *AudienceSummaryBeta {
	return v.value
}

func (v *NullableAudienceSummaryBeta) Set(val *AudienceSummaryBeta) {
	v.value = val
	v.isSet = true
}

func (v NullableAudienceSummaryBeta) IsSet() bool {
	return v.isSet
}

func (v *NullableAudienceSummaryBeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudienceSummaryBeta(val *AudienceSummaryBeta) *NullableAudienceSummaryBeta {
	return &NullableAudienceSummaryBeta{value: val, isSet: true}
}

func (v NullableAudienceSummaryBeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudienceSummaryBeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
