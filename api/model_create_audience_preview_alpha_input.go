/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 60.0.0
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the CreateAudiencePreviewAlphaInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAudiencePreviewAlphaInput{}

// CreateAudiencePreviewAlphaInput Input to create an audience preview.
type CreateAudiencePreviewAlphaInput struct {
	Definition AudienceDefinition `json:"definition"`
	// Denotes the type of audience product.  Possible values: USERS, ACCOUNTS, LINKED.
	AudienceType string                        `json:"audienceType"`
	Options      *CreateAudiencePreviewOptions `json:"options,omitempty"`
}

// NewCreateAudiencePreviewAlphaInput instantiates a new CreateAudiencePreviewAlphaInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAudiencePreviewAlphaInput(
	definition AudienceDefinition,
	audienceType string,
) *CreateAudiencePreviewAlphaInput {
	this := CreateAudiencePreviewAlphaInput{}
	this.Definition = definition
	this.AudienceType = audienceType
	return &this
}

// NewCreateAudiencePreviewAlphaInputWithDefaults instantiates a new CreateAudiencePreviewAlphaInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAudiencePreviewAlphaInputWithDefaults() *CreateAudiencePreviewAlphaInput {
	this := CreateAudiencePreviewAlphaInput{}
	return &this
}

// GetDefinition returns the Definition field value
func (o *CreateAudiencePreviewAlphaInput) GetDefinition() AudienceDefinition {
	if o == nil {
		var ret AudienceDefinition
		return ret
	}

	return o.Definition
}

// GetDefinitionOk returns a tuple with the Definition field value
// and a boolean to check if the value has been set.
func (o *CreateAudiencePreviewAlphaInput) GetDefinitionOk() (*AudienceDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Definition, true
}

// SetDefinition sets field value
func (o *CreateAudiencePreviewAlphaInput) SetDefinition(v AudienceDefinition) {
	o.Definition = v
}

// GetAudienceType returns the AudienceType field value
func (o *CreateAudiencePreviewAlphaInput) GetAudienceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AudienceType
}

// GetAudienceTypeOk returns a tuple with the AudienceType field value
// and a boolean to check if the value has been set.
func (o *CreateAudiencePreviewAlphaInput) GetAudienceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AudienceType, true
}

// SetAudienceType sets field value
func (o *CreateAudiencePreviewAlphaInput) SetAudienceType(v string) {
	o.AudienceType = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *CreateAudiencePreviewAlphaInput) GetOptions() CreateAudiencePreviewOptions {
	if o == nil || IsNil(o.Options) {
		var ret CreateAudiencePreviewOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAudiencePreviewAlphaInput) GetOptionsOk() (*CreateAudiencePreviewOptions, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *CreateAudiencePreviewAlphaInput) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given CreateAudiencePreviewOptions and assigns it to the Options field.
func (o *CreateAudiencePreviewAlphaInput) SetOptions(v CreateAudiencePreviewOptions) {
	o.Options = &v
}

func (o CreateAudiencePreviewAlphaInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAudiencePreviewAlphaInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["definition"] = o.Definition
	toSerialize["audienceType"] = o.AudienceType
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	return toSerialize, nil
}

type NullableCreateAudiencePreviewAlphaInput struct {
	value *CreateAudiencePreviewAlphaInput
	isSet bool
}

func (v NullableCreateAudiencePreviewAlphaInput) Get() *CreateAudiencePreviewAlphaInput {
	return v.value
}

func (v *NullableCreateAudiencePreviewAlphaInput) Set(val *CreateAudiencePreviewAlphaInput) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAudiencePreviewAlphaInput) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAudiencePreviewAlphaInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAudiencePreviewAlphaInput(
	val *CreateAudiencePreviewAlphaInput,
) *NullableCreateAudiencePreviewAlphaInput {
	return &NullableCreateAudiencePreviewAlphaInput{value: val, isSet: true}
}

func (v NullableCreateAudiencePreviewAlphaInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAudiencePreviewAlphaInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
