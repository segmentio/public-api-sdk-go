/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 61.1.4
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the CreateAudienceBetaInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAudienceBetaInput{}

// CreateAudienceBetaInput Input to create an audience.
type CreateAudienceBetaInput struct {
	// Name of the audience.
	Name string `json:"name"`
	// Determines whether a computation is enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// Description of the audience.
	Description *string            `json:"description,omitempty"`
	Definition  AudienceDefinition `json:"definition"`
	// Denotes the type of audience product.  Possible values: USERS, ACCOUNTS, LINKED.
	AudienceType string           `json:"audienceType"`
	Options      *AudienceOptions `json:"options,omitempty"`
}

// NewCreateAudienceBetaInput instantiates a new CreateAudienceBetaInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAudienceBetaInput(
	name string,
	definition AudienceDefinition,
	audienceType string,
) *CreateAudienceBetaInput {
	this := CreateAudienceBetaInput{}
	this.Name = name
	this.Definition = definition
	this.AudienceType = audienceType
	return &this
}

// NewCreateAudienceBetaInputWithDefaults instantiates a new CreateAudienceBetaInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAudienceBetaInputWithDefaults() *CreateAudienceBetaInput {
	this := CreateAudienceBetaInput{}
	return &this
}

// GetName returns the Name field value
func (o *CreateAudienceBetaInput) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateAudienceBetaInput) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateAudienceBetaInput) SetName(v string) {
	o.Name = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CreateAudienceBetaInput) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAudienceBetaInput) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CreateAudienceBetaInput) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CreateAudienceBetaInput) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateAudienceBetaInput) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAudienceBetaInput) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateAudienceBetaInput) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateAudienceBetaInput) SetDescription(v string) {
	o.Description = &v
}

// GetDefinition returns the Definition field value
func (o *CreateAudienceBetaInput) GetDefinition() AudienceDefinition {
	if o == nil {
		var ret AudienceDefinition
		return ret
	}

	return o.Definition
}

// GetDefinitionOk returns a tuple with the Definition field value
// and a boolean to check if the value has been set.
func (o *CreateAudienceBetaInput) GetDefinitionOk() (*AudienceDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Definition, true
}

// SetDefinition sets field value
func (o *CreateAudienceBetaInput) SetDefinition(v AudienceDefinition) {
	o.Definition = v
}

// GetAudienceType returns the AudienceType field value
func (o *CreateAudienceBetaInput) GetAudienceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AudienceType
}

// GetAudienceTypeOk returns a tuple with the AudienceType field value
// and a boolean to check if the value has been set.
func (o *CreateAudienceBetaInput) GetAudienceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AudienceType, true
}

// SetAudienceType sets field value
func (o *CreateAudienceBetaInput) SetAudienceType(v string) {
	o.AudienceType = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *CreateAudienceBetaInput) GetOptions() AudienceOptions {
	if o == nil || IsNil(o.Options) {
		var ret AudienceOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAudienceBetaInput) GetOptionsOk() (*AudienceOptions, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *CreateAudienceBetaInput) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given AudienceOptions and assigns it to the Options field.
func (o *CreateAudienceBetaInput) SetOptions(v AudienceOptions) {
	o.Options = &v
}

func (o CreateAudienceBetaInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAudienceBetaInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["definition"] = o.Definition
	toSerialize["audienceType"] = o.AudienceType
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	return toSerialize, nil
}

type NullableCreateAudienceBetaInput struct {
	value *CreateAudienceBetaInput
	isSet bool
}

func (v NullableCreateAudienceBetaInput) Get() *CreateAudienceBetaInput {
	return v.value
}

func (v *NullableCreateAudienceBetaInput) Set(val *CreateAudienceBetaInput) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAudienceBetaInput) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAudienceBetaInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAudienceBetaInput(
	val *CreateAudienceBetaInput,
) *NullableCreateAudienceBetaInput {
	return &NullableCreateAudienceBetaInput{value: val, isSet: true}
}

func (v NullableCreateAudienceBetaInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAudienceBetaInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
