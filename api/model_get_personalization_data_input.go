/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 53.2.0
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the GetPersonalizationDataInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPersonalizationDataInput{}

// GetPersonalizationDataInput Input for the getEntityDataForProfile endpoint.
type GetPersonalizationDataInput struct {
	// The space id.
	SpaceId string `json:"spaceId"`
	// Entity type.
	EntityType string `json:"entityType"`
	// Entity id - if type is profile, should have the shape \"<type>:<identifier>\".
	EntityId string `json:"entityId"`
	// Child entity type.
	ChildEntityType *string `json:"childEntityType,omitempty"`
}

// NewGetPersonalizationDataInput instantiates a new GetPersonalizationDataInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPersonalizationDataInput(
	spaceId string,
	entityType string,
	entityId string,
) *GetPersonalizationDataInput {
	this := GetPersonalizationDataInput{}
	this.SpaceId = spaceId
	this.EntityType = entityType
	this.EntityId = entityId
	return &this
}

// NewGetPersonalizationDataInputWithDefaults instantiates a new GetPersonalizationDataInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPersonalizationDataInputWithDefaults() *GetPersonalizationDataInput {
	this := GetPersonalizationDataInput{}
	return &this
}

// GetSpaceId returns the SpaceId field value
func (o *GetPersonalizationDataInput) GetSpaceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SpaceId
}

// GetSpaceIdOk returns a tuple with the SpaceId field value
// and a boolean to check if the value has been set.
func (o *GetPersonalizationDataInput) GetSpaceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpaceId, true
}

// SetSpaceId sets field value
func (o *GetPersonalizationDataInput) SetSpaceId(v string) {
	o.SpaceId = v
}

// GetEntityType returns the EntityType field value
func (o *GetPersonalizationDataInput) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *GetPersonalizationDataInput) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *GetPersonalizationDataInput) SetEntityType(v string) {
	o.EntityType = v
}

// GetEntityId returns the EntityId field value
func (o *GetPersonalizationDataInput) GetEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value
// and a boolean to check if the value has been set.
func (o *GetPersonalizationDataInput) GetEntityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityId, true
}

// SetEntityId sets field value
func (o *GetPersonalizationDataInput) SetEntityId(v string) {
	o.EntityId = v
}

// GetChildEntityType returns the ChildEntityType field value if set, zero value otherwise.
func (o *GetPersonalizationDataInput) GetChildEntityType() string {
	if o == nil || IsNil(o.ChildEntityType) {
		var ret string
		return ret
	}
	return *o.ChildEntityType
}

// GetChildEntityTypeOk returns a tuple with the ChildEntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPersonalizationDataInput) GetChildEntityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ChildEntityType) {
		return nil, false
	}
	return o.ChildEntityType, true
}

// HasChildEntityType returns a boolean if a field has been set.
func (o *GetPersonalizationDataInput) HasChildEntityType() bool {
	if o != nil && !IsNil(o.ChildEntityType) {
		return true
	}

	return false
}

// SetChildEntityType gets a reference to the given string and assigns it to the ChildEntityType field.
func (o *GetPersonalizationDataInput) SetChildEntityType(v string) {
	o.ChildEntityType = &v
}

func (o GetPersonalizationDataInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPersonalizationDataInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["spaceId"] = o.SpaceId
	toSerialize["entityType"] = o.EntityType
	toSerialize["entityId"] = o.EntityId
	if !IsNil(o.ChildEntityType) {
		toSerialize["childEntityType"] = o.ChildEntityType
	}
	return toSerialize, nil
}

type NullableGetPersonalizationDataInput struct {
	value *GetPersonalizationDataInput
	isSet bool
}

func (v NullableGetPersonalizationDataInput) Get() *GetPersonalizationDataInput {
	return v.value
}

func (v *NullableGetPersonalizationDataInput) Set(val *GetPersonalizationDataInput) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPersonalizationDataInput) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPersonalizationDataInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPersonalizationDataInput(
	val *GetPersonalizationDataInput,
) *NullableGetPersonalizationDataInput {
	return &NullableGetPersonalizationDataInput{value: val, isSet: true}
}

func (v NullableGetPersonalizationDataInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPersonalizationDataInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
