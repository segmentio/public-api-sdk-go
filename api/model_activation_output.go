/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 61.1.1
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ActivationOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivationOutput{}

// ActivationOutput A class that encapsulates the complete activation output with full details.
type ActivationOutput struct {
	// The activation id.
	Id string `json:"id"`
	// Activation Enabled Status.
	Enabled bool `json:"enabled"`
	// The WORKSPACE id.
	WorkspaceId string `json:"workspaceId"`
	// The space id.
	SpaceId string `json:"spaceId"`
	// The audience id.
	AudienceId string `json:"audienceId"`
	// The DESTINATION connection id (formerly integrationInstanceId).
	DestinationConnectionId string `json:"destinationConnectionId"`
	// Type of activation trigger.
	ActivationType string `json:"activationType"`
	// Name of the activation.
	ActivationName     string                               `json:"activationName"`
	Personalization    PersonalizationInput                 `json:"personalization"`
	DestinationMapping DestinationSubscriptionConfiguration `json:"destinationMapping"`
	// Whether to perform a resync after creation of the activation.
	PerformResync *bool `json:"performResync,omitempty"`
}

// NewActivationOutput instantiates a new ActivationOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivationOutput(
	id string,
	enabled bool,
	workspaceId string,
	spaceId string,
	audienceId string,
	destinationConnectionId string,
	activationType string,
	activationName string,
	personalization PersonalizationInput,
	destinationMapping DestinationSubscriptionConfiguration,
) *ActivationOutput {
	this := ActivationOutput{}
	this.Id = id
	this.Enabled = enabled
	this.WorkspaceId = workspaceId
	this.SpaceId = spaceId
	this.AudienceId = audienceId
	this.DestinationConnectionId = destinationConnectionId
	this.ActivationType = activationType
	this.ActivationName = activationName
	this.Personalization = personalization
	this.DestinationMapping = destinationMapping
	return &this
}

// NewActivationOutputWithDefaults instantiates a new ActivationOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivationOutputWithDefaults() *ActivationOutput {
	this := ActivationOutput{}
	return &this
}

// GetId returns the Id field value
func (o *ActivationOutput) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ActivationOutput) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ActivationOutput) SetId(v string) {
	o.Id = v
}

// GetEnabled returns the Enabled field value
func (o *ActivationOutput) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ActivationOutput) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ActivationOutput) SetEnabled(v bool) {
	o.Enabled = v
}

// GetWorkspaceId returns the WorkspaceId field value
func (o *ActivationOutput) GetWorkspaceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkspaceId
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value
// and a boolean to check if the value has been set.
func (o *ActivationOutput) GetWorkspaceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkspaceId, true
}

// SetWorkspaceId sets field value
func (o *ActivationOutput) SetWorkspaceId(v string) {
	o.WorkspaceId = v
}

// GetSpaceId returns the SpaceId field value
func (o *ActivationOutput) GetSpaceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SpaceId
}

// GetSpaceIdOk returns a tuple with the SpaceId field value
// and a boolean to check if the value has been set.
func (o *ActivationOutput) GetSpaceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpaceId, true
}

// SetSpaceId sets field value
func (o *ActivationOutput) SetSpaceId(v string) {
	o.SpaceId = v
}

// GetAudienceId returns the AudienceId field value
func (o *ActivationOutput) GetAudienceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AudienceId
}

// GetAudienceIdOk returns a tuple with the AudienceId field value
// and a boolean to check if the value has been set.
func (o *ActivationOutput) GetAudienceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AudienceId, true
}

// SetAudienceId sets field value
func (o *ActivationOutput) SetAudienceId(v string) {
	o.AudienceId = v
}

// GetDestinationConnectionId returns the DestinationConnectionId field value
func (o *ActivationOutput) GetDestinationConnectionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationConnectionId
}

// GetDestinationConnectionIdOk returns a tuple with the DestinationConnectionId field value
// and a boolean to check if the value has been set.
func (o *ActivationOutput) GetDestinationConnectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationConnectionId, true
}

// SetDestinationConnectionId sets field value
func (o *ActivationOutput) SetDestinationConnectionId(v string) {
	o.DestinationConnectionId = v
}

// GetActivationType returns the ActivationType field value
func (o *ActivationOutput) GetActivationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActivationType
}

// GetActivationTypeOk returns a tuple with the ActivationType field value
// and a boolean to check if the value has been set.
func (o *ActivationOutput) GetActivationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActivationType, true
}

// SetActivationType sets field value
func (o *ActivationOutput) SetActivationType(v string) {
	o.ActivationType = v
}

// GetActivationName returns the ActivationName field value
func (o *ActivationOutput) GetActivationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActivationName
}

// GetActivationNameOk returns a tuple with the ActivationName field value
// and a boolean to check if the value has been set.
func (o *ActivationOutput) GetActivationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActivationName, true
}

// SetActivationName sets field value
func (o *ActivationOutput) SetActivationName(v string) {
	o.ActivationName = v
}

// GetPersonalization returns the Personalization field value
func (o *ActivationOutput) GetPersonalization() PersonalizationInput {
	if o == nil {
		var ret PersonalizationInput
		return ret
	}

	return o.Personalization
}

// GetPersonalizationOk returns a tuple with the Personalization field value
// and a boolean to check if the value has been set.
func (o *ActivationOutput) GetPersonalizationOk() (*PersonalizationInput, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Personalization, true
}

// SetPersonalization sets field value
func (o *ActivationOutput) SetPersonalization(v PersonalizationInput) {
	o.Personalization = v
}

// GetDestinationMapping returns the DestinationMapping field value
func (o *ActivationOutput) GetDestinationMapping() DestinationSubscriptionConfiguration {
	if o == nil {
		var ret DestinationSubscriptionConfiguration
		return ret
	}

	return o.DestinationMapping
}

// GetDestinationMappingOk returns a tuple with the DestinationMapping field value
// and a boolean to check if the value has been set.
func (o *ActivationOutput) GetDestinationMappingOk() (*DestinationSubscriptionConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationMapping, true
}

// SetDestinationMapping sets field value
func (o *ActivationOutput) SetDestinationMapping(v DestinationSubscriptionConfiguration) {
	o.DestinationMapping = v
}

// GetPerformResync returns the PerformResync field value if set, zero value otherwise.
func (o *ActivationOutput) GetPerformResync() bool {
	if o == nil || IsNil(o.PerformResync) {
		var ret bool
		return ret
	}
	return *o.PerformResync
}

// GetPerformResyncOk returns a tuple with the PerformResync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivationOutput) GetPerformResyncOk() (*bool, bool) {
	if o == nil || IsNil(o.PerformResync) {
		return nil, false
	}
	return o.PerformResync, true
}

// HasPerformResync returns a boolean if a field has been set.
func (o *ActivationOutput) HasPerformResync() bool {
	if o != nil && !IsNil(o.PerformResync) {
		return true
	}

	return false
}

// SetPerformResync gets a reference to the given bool and assigns it to the PerformResync field.
func (o *ActivationOutput) SetPerformResync(v bool) {
	o.PerformResync = &v
}

func (o ActivationOutput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivationOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["enabled"] = o.Enabled
	toSerialize["workspaceId"] = o.WorkspaceId
	toSerialize["spaceId"] = o.SpaceId
	toSerialize["audienceId"] = o.AudienceId
	toSerialize["destinationConnectionId"] = o.DestinationConnectionId
	toSerialize["activationType"] = o.ActivationType
	toSerialize["activationName"] = o.ActivationName
	toSerialize["personalization"] = o.Personalization
	toSerialize["destinationMapping"] = o.DestinationMapping
	if !IsNil(o.PerformResync) {
		toSerialize["performResync"] = o.PerformResync
	}
	return toSerialize, nil
}

type NullableActivationOutput struct {
	value *ActivationOutput
	isSet bool
}

func (v NullableActivationOutput) Get() *ActivationOutput {
	return v.value
}

func (v *NullableActivationOutput) Set(val *ActivationOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableActivationOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableActivationOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivationOutput(val *ActivationOutput) *NullableActivationOutput {
	return &NullableActivationOutput{value: val, isSet: true}
}

func (v NullableActivationOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivationOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
