/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 58.7.0
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the CompletedAudiencePreview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompletedAudiencePreview{}

// CompletedAudiencePreview Audience preview that has been completed.
type CompletedAudiencePreview struct {
	// Status for the audience preview.
	Status string `json:"status"`
	// Sampled result membership for the audience preview.
	Results []AudiencePreviewResult `json:"results"`
	Size    AudienceSize            `json:"size"`
	// Unique identifier for tracking and retrieving results of an audience preview.
	Id string `json:"id"`
	// The audience type of the preview.
	AudienceType string                        `json:"audienceType"`
	Definition   AudienceDefinitionWithoutType `json:"definition"`
	Options      AudiencePreviewOptions        `json:"options"`
}

// NewCompletedAudiencePreview instantiates a new CompletedAudiencePreview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompletedAudiencePreview(
	status string,
	results []AudiencePreviewResult,
	size AudienceSize,
	id string,
	audienceType string,
	definition AudienceDefinitionWithoutType,
	options AudiencePreviewOptions,
) *CompletedAudiencePreview {
	this := CompletedAudiencePreview{}
	this.Status = status
	this.Results = results
	this.Size = size
	this.Id = id
	this.AudienceType = audienceType
	this.Definition = definition
	this.Options = options
	return &this
}

// NewCompletedAudiencePreviewWithDefaults instantiates a new CompletedAudiencePreview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompletedAudiencePreviewWithDefaults() *CompletedAudiencePreview {
	this := CompletedAudiencePreview{}
	return &this
}

// GetStatus returns the Status field value
func (o *CompletedAudiencePreview) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CompletedAudiencePreview) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CompletedAudiencePreview) SetStatus(v string) {
	o.Status = v
}

// GetResults returns the Results field value
func (o *CompletedAudiencePreview) GetResults() []AudiencePreviewResult {
	if o == nil {
		var ret []AudiencePreviewResult
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *CompletedAudiencePreview) GetResultsOk() ([]AudiencePreviewResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *CompletedAudiencePreview) SetResults(v []AudiencePreviewResult) {
	o.Results = v
}

// GetSize returns the Size field value
func (o *CompletedAudiencePreview) GetSize() AudienceSize {
	if o == nil {
		var ret AudienceSize
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *CompletedAudiencePreview) GetSizeOk() (*AudienceSize, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *CompletedAudiencePreview) SetSize(v AudienceSize) {
	o.Size = v
}

// GetId returns the Id field value
func (o *CompletedAudiencePreview) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CompletedAudiencePreview) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CompletedAudiencePreview) SetId(v string) {
	o.Id = v
}

// GetAudienceType returns the AudienceType field value
func (o *CompletedAudiencePreview) GetAudienceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AudienceType
}

// GetAudienceTypeOk returns a tuple with the AudienceType field value
// and a boolean to check if the value has been set.
func (o *CompletedAudiencePreview) GetAudienceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AudienceType, true
}

// SetAudienceType sets field value
func (o *CompletedAudiencePreview) SetAudienceType(v string) {
	o.AudienceType = v
}

// GetDefinition returns the Definition field value
func (o *CompletedAudiencePreview) GetDefinition() AudienceDefinitionWithoutType {
	if o == nil {
		var ret AudienceDefinitionWithoutType
		return ret
	}

	return o.Definition
}

// GetDefinitionOk returns a tuple with the Definition field value
// and a boolean to check if the value has been set.
func (o *CompletedAudiencePreview) GetDefinitionOk() (*AudienceDefinitionWithoutType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Definition, true
}

// SetDefinition sets field value
func (o *CompletedAudiencePreview) SetDefinition(v AudienceDefinitionWithoutType) {
	o.Definition = v
}

// GetOptions returns the Options field value
func (o *CompletedAudiencePreview) GetOptions() AudiencePreviewOptions {
	if o == nil {
		var ret AudiencePreviewOptions
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *CompletedAudiencePreview) GetOptionsOk() (*AudiencePreviewOptions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Options, true
}

// SetOptions sets field value
func (o *CompletedAudiencePreview) SetOptions(v AudiencePreviewOptions) {
	o.Options = v
}

func (o CompletedAudiencePreview) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompletedAudiencePreview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	toSerialize["results"] = o.Results
	toSerialize["size"] = o.Size
	toSerialize["id"] = o.Id
	toSerialize["audienceType"] = o.AudienceType
	toSerialize["definition"] = o.Definition
	toSerialize["options"] = o.Options
	return toSerialize, nil
}

type NullableCompletedAudiencePreview struct {
	value *CompletedAudiencePreview
	isSet bool
}

func (v NullableCompletedAudiencePreview) Get() *CompletedAudiencePreview {
	return v.value
}

func (v *NullableCompletedAudiencePreview) Set(val *CompletedAudiencePreview) {
	v.value = val
	v.isSet = true
}

func (v NullableCompletedAudiencePreview) IsSet() bool {
	return v.isSet
}

func (v *NullableCompletedAudiencePreview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompletedAudiencePreview(
	val *CompletedAudiencePreview,
) *NullableCompletedAudiencePreview {
	return &NullableCompletedAudiencePreview{value: val, isSet: true}
}

func (v NullableCompletedAudiencePreview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompletedAudiencePreview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
