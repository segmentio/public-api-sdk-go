/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 58.14.0
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ActivationSummaryOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivationSummaryOutput{}

// ActivationSummaryOutput A class that encapsulates the output shared across endpoints for a given activation.
type ActivationSummaryOutput struct {
	// The activation id.
	Id string `json:"id"`
	// Activation Enabled Status.
	Enabled bool `json:"enabled"`
}

// NewActivationSummaryOutput instantiates a new ActivationSummaryOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivationSummaryOutput(id string, enabled bool) *ActivationSummaryOutput {
	this := ActivationSummaryOutput{}
	this.Id = id
	this.Enabled = enabled
	return &this
}

// NewActivationSummaryOutputWithDefaults instantiates a new ActivationSummaryOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivationSummaryOutputWithDefaults() *ActivationSummaryOutput {
	this := ActivationSummaryOutput{}
	return &this
}

// GetId returns the Id field value
func (o *ActivationSummaryOutput) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ActivationSummaryOutput) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ActivationSummaryOutput) SetId(v string) {
	o.Id = v
}

// GetEnabled returns the Enabled field value
func (o *ActivationSummaryOutput) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ActivationSummaryOutput) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ActivationSummaryOutput) SetEnabled(v bool) {
	o.Enabled = v
}

func (o ActivationSummaryOutput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivationSummaryOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["enabled"] = o.Enabled
	return toSerialize, nil
}

type NullableActivationSummaryOutput struct {
	value *ActivationSummaryOutput
	isSet bool
}

func (v NullableActivationSummaryOutput) Get() *ActivationSummaryOutput {
	return v.value
}

func (v *NullableActivationSummaryOutput) Set(val *ActivationSummaryOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableActivationSummaryOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableActivationSummaryOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivationSummaryOutput(
	val *ActivationSummaryOutput,
) *NullableActivationSummaryOutput {
	return &NullableActivationSummaryOutput{value: val, isSet: true}
}

func (v NullableActivationSummaryOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivationSummaryOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
