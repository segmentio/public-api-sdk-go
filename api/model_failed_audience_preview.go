/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 58.7.0
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the FailedAudiencePreview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FailedAudiencePreview{}

// FailedAudiencePreview struct for FailedAudiencePreview
type FailedAudiencePreview struct {
	// Status for the audience preview.
	Status string `json:"status"`
	// Explanation of why the audience preview failed, if available.
	FailureReason *string `json:"failureReason,omitempty"`
	// Unique identifier for tracking and retrieving results of an audience preview.
	Id string `json:"id"`
	// The audience type of the preview.
	AudienceType string                        `json:"audienceType"`
	Definition   AudienceDefinitionWithoutType `json:"definition"`
	Options      AudienceOptionsWithLookback   `json:"options"`
}

// NewFailedAudiencePreview instantiates a new FailedAudiencePreview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFailedAudiencePreview(
	status string,
	id string,
	audienceType string,
	definition AudienceDefinitionWithoutType,
	options AudienceOptionsWithLookback,
) *FailedAudiencePreview {
	this := FailedAudiencePreview{}
	this.Status = status
	this.Id = id
	this.AudienceType = audienceType
	this.Definition = definition
	this.Options = options
	return &this
}

// NewFailedAudiencePreviewWithDefaults instantiates a new FailedAudiencePreview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFailedAudiencePreviewWithDefaults() *FailedAudiencePreview {
	this := FailedAudiencePreview{}
	return &this
}

// GetStatus returns the Status field value
func (o *FailedAudiencePreview) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *FailedAudiencePreview) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *FailedAudiencePreview) SetStatus(v string) {
	o.Status = v
}

// GetFailureReason returns the FailureReason field value if set, zero value otherwise.
func (o *FailedAudiencePreview) GetFailureReason() string {
	if o == nil || IsNil(o.FailureReason) {
		var ret string
		return ret
	}
	return *o.FailureReason
}

// GetFailureReasonOk returns a tuple with the FailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FailedAudiencePreview) GetFailureReasonOk() (*string, bool) {
	if o == nil || IsNil(o.FailureReason) {
		return nil, false
	}
	return o.FailureReason, true
}

// HasFailureReason returns a boolean if a field has been set.
func (o *FailedAudiencePreview) HasFailureReason() bool {
	if o != nil && !IsNil(o.FailureReason) {
		return true
	}

	return false
}

// SetFailureReason gets a reference to the given string and assigns it to the FailureReason field.
func (o *FailedAudiencePreview) SetFailureReason(v string) {
	o.FailureReason = &v
}

// GetId returns the Id field value
func (o *FailedAudiencePreview) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FailedAudiencePreview) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FailedAudiencePreview) SetId(v string) {
	o.Id = v
}

// GetAudienceType returns the AudienceType field value
func (o *FailedAudiencePreview) GetAudienceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AudienceType
}

// GetAudienceTypeOk returns a tuple with the AudienceType field value
// and a boolean to check if the value has been set.
func (o *FailedAudiencePreview) GetAudienceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AudienceType, true
}

// SetAudienceType sets field value
func (o *FailedAudiencePreview) SetAudienceType(v string) {
	o.AudienceType = v
}

// GetDefinition returns the Definition field value
func (o *FailedAudiencePreview) GetDefinition() AudienceDefinitionWithoutType {
	if o == nil {
		var ret AudienceDefinitionWithoutType
		return ret
	}

	return o.Definition
}

// GetDefinitionOk returns a tuple with the Definition field value
// and a boolean to check if the value has been set.
func (o *FailedAudiencePreview) GetDefinitionOk() (*AudienceDefinitionWithoutType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Definition, true
}

// SetDefinition sets field value
func (o *FailedAudiencePreview) SetDefinition(v AudienceDefinitionWithoutType) {
	o.Definition = v
}

// GetOptions returns the Options field value
func (o *FailedAudiencePreview) GetOptions() AudienceOptionsWithLookback {
	if o == nil {
		var ret AudienceOptionsWithLookback
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *FailedAudiencePreview) GetOptionsOk() (*AudienceOptionsWithLookback, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Options, true
}

// SetOptions sets field value
func (o *FailedAudiencePreview) SetOptions(v AudienceOptionsWithLookback) {
	o.Options = v
}

func (o FailedAudiencePreview) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FailedAudiencePreview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	if !IsNil(o.FailureReason) {
		toSerialize["failureReason"] = o.FailureReason
	}
	toSerialize["id"] = o.Id
	toSerialize["audienceType"] = o.AudienceType
	toSerialize["definition"] = o.Definition
	toSerialize["options"] = o.Options
	return toSerialize, nil
}

type NullableFailedAudiencePreview struct {
	value *FailedAudiencePreview
	isSet bool
}

func (v NullableFailedAudiencePreview) Get() *FailedAudiencePreview {
	return v.value
}

func (v *NullableFailedAudiencePreview) Set(val *FailedAudiencePreview) {
	v.value = val
	v.isSet = true
}

func (v NullableFailedAudiencePreview) IsSet() bool {
	return v.isSet
}

func (v *NullableFailedAudiencePreview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFailedAudiencePreview(val *FailedAudiencePreview) *NullableFailedAudiencePreview {
	return &NullableFailedAudiencePreview{value: val, isSet: true}
}

func (v NullableFailedAudiencePreview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFailedAudiencePreview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
