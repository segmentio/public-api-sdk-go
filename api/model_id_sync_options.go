/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 60.1.2
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the IDSyncOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IDSyncOptions{}

// IDSyncOptions struct for IDSyncOptions
type IDSyncOptions struct {
	// The list of trigger on conditions.
	TriggerOn []string `json:"triggerOn"`
	// The map of identifiers to the config.
	Ids map[string]interface{} `json:"ids"`
}

// NewIDSyncOptions instantiates a new IDSyncOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIDSyncOptions(triggerOn []string, ids map[string]interface{}) *IDSyncOptions {
	this := IDSyncOptions{}
	this.TriggerOn = triggerOn
	this.Ids = ids
	return &this
}

// NewIDSyncOptionsWithDefaults instantiates a new IDSyncOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIDSyncOptionsWithDefaults() *IDSyncOptions {
	this := IDSyncOptions{}
	return &this
}

// GetTriggerOn returns the TriggerOn field value
func (o *IDSyncOptions) GetTriggerOn() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TriggerOn
}

// GetTriggerOnOk returns a tuple with the TriggerOn field value
// and a boolean to check if the value has been set.
func (o *IDSyncOptions) GetTriggerOnOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TriggerOn, true
}

// SetTriggerOn sets field value
func (o *IDSyncOptions) SetTriggerOn(v []string) {
	o.TriggerOn = v
}

// GetIds returns the Ids field value
func (o *IDSyncOptions) GetIds() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value
// and a boolean to check if the value has been set.
func (o *IDSyncOptions) GetIdsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Ids, true
}

// SetIds sets field value
func (o *IDSyncOptions) SetIds(v map[string]interface{}) {
	o.Ids = v
}

func (o IDSyncOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IDSyncOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["triggerOn"] = o.TriggerOn
	toSerialize["ids"] = o.Ids
	return toSerialize, nil
}

type NullableIDSyncOptions struct {
	value *IDSyncOptions
	isSet bool
}

func (v NullableIDSyncOptions) Get() *IDSyncOptions {
	return v.value
}

func (v *NullableIDSyncOptions) Set(val *IDSyncOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableIDSyncOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableIDSyncOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIDSyncOptions(val *IDSyncOptions) *NullableIDSyncOptions {
	return &NullableIDSyncOptions{value: val, isSet: true}
}

func (v NullableIDSyncOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIDSyncOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
