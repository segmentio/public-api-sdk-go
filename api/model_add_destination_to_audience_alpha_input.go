/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 58.14.0
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the AddDestinationToAudienceAlphaInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddDestinationToAudienceAlphaInput{}

// AddDestinationToAudienceAlphaInput Input to Add a Destination into an Audience.
type AddDestinationToAudienceAlphaInput struct {
	// Version Schema.
	VersionSchema string `json:"versionSchema"`
	// The id of the Workspace the audience exists within.
	WorkspaceId string           `json:"workspaceId"`
	Destination DestinationInput `json:"destination"`
}

// NewAddDestinationToAudienceAlphaInput instantiates a new AddDestinationToAudienceAlphaInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddDestinationToAudienceAlphaInput(
	versionSchema string,
	workspaceId string,
	destination DestinationInput,
) *AddDestinationToAudienceAlphaInput {
	this := AddDestinationToAudienceAlphaInput{}
	this.VersionSchema = versionSchema
	this.WorkspaceId = workspaceId
	this.Destination = destination
	return &this
}

// NewAddDestinationToAudienceAlphaInputWithDefaults instantiates a new AddDestinationToAudienceAlphaInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddDestinationToAudienceAlphaInputWithDefaults() *AddDestinationToAudienceAlphaInput {
	this := AddDestinationToAudienceAlphaInput{}
	return &this
}

// GetVersionSchema returns the VersionSchema field value
func (o *AddDestinationToAudienceAlphaInput) GetVersionSchema() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VersionSchema
}

// GetVersionSchemaOk returns a tuple with the VersionSchema field value
// and a boolean to check if the value has been set.
func (o *AddDestinationToAudienceAlphaInput) GetVersionSchemaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VersionSchema, true
}

// SetVersionSchema sets field value
func (o *AddDestinationToAudienceAlphaInput) SetVersionSchema(v string) {
	o.VersionSchema = v
}

// GetWorkspaceId returns the WorkspaceId field value
func (o *AddDestinationToAudienceAlphaInput) GetWorkspaceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkspaceId
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value
// and a boolean to check if the value has been set.
func (o *AddDestinationToAudienceAlphaInput) GetWorkspaceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkspaceId, true
}

// SetWorkspaceId sets field value
func (o *AddDestinationToAudienceAlphaInput) SetWorkspaceId(v string) {
	o.WorkspaceId = v
}

// GetDestination returns the Destination field value
func (o *AddDestinationToAudienceAlphaInput) GetDestination() DestinationInput {
	if o == nil {
		var ret DestinationInput
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *AddDestinationToAudienceAlphaInput) GetDestinationOk() (*DestinationInput, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *AddDestinationToAudienceAlphaInput) SetDestination(v DestinationInput) {
	o.Destination = v
}

func (o AddDestinationToAudienceAlphaInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddDestinationToAudienceAlphaInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["versionSchema"] = o.VersionSchema
	toSerialize["workspaceId"] = o.WorkspaceId
	toSerialize["destination"] = o.Destination
	return toSerialize, nil
}

type NullableAddDestinationToAudienceAlphaInput struct {
	value *AddDestinationToAudienceAlphaInput
	isSet bool
}

func (v NullableAddDestinationToAudienceAlphaInput) Get() *AddDestinationToAudienceAlphaInput {
	return v.value
}

func (v *NullableAddDestinationToAudienceAlphaInput) Set(val *AddDestinationToAudienceAlphaInput) {
	v.value = val
	v.isSet = true
}

func (v NullableAddDestinationToAudienceAlphaInput) IsSet() bool {
	return v.isSet
}

func (v *NullableAddDestinationToAudienceAlphaInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddDestinationToAudienceAlphaInput(
	val *AddDestinationToAudienceAlphaInput,
) *NullableAddDestinationToAudienceAlphaInput {
	return &NullableAddDestinationToAudienceAlphaInput{value: val, isSet: true}
}

func (v NullableAddDestinationToAudienceAlphaInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddDestinationToAudienceAlphaInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
