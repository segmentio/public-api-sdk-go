/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 59.2.0
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the CreateDownloadAlphaInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDownloadAlphaInput{}

// CreateDownloadAlphaInput Input to create presigned URLs for Granular Observability Collection logs.
type CreateDownloadAlphaInput struct {
	// The collection's unique id.
	CollectionId string `json:"collectionId"`
	// The ISO8601 formatted timestamp corresponding to a specific hour and day to retrieve data for. E.g.: 2025-05-07T23:00:00Z Objects are bucketed by hour and a month of data is retained.
	Hour string `json:"hour"`
}

// NewCreateDownloadAlphaInput instantiates a new CreateDownloadAlphaInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDownloadAlphaInput(collectionId string, hour string) *CreateDownloadAlphaInput {
	this := CreateDownloadAlphaInput{}
	this.CollectionId = collectionId
	this.Hour = hour
	return &this
}

// NewCreateDownloadAlphaInputWithDefaults instantiates a new CreateDownloadAlphaInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDownloadAlphaInputWithDefaults() *CreateDownloadAlphaInput {
	this := CreateDownloadAlphaInput{}
	return &this
}

// GetCollectionId returns the CollectionId field value
func (o *CreateDownloadAlphaInput) GetCollectionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollectionId
}

// GetCollectionIdOk returns a tuple with the CollectionId field value
// and a boolean to check if the value has been set.
func (o *CreateDownloadAlphaInput) GetCollectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionId, true
}

// SetCollectionId sets field value
func (o *CreateDownloadAlphaInput) SetCollectionId(v string) {
	o.CollectionId = v
}

// GetHour returns the Hour field value
func (o *CreateDownloadAlphaInput) GetHour() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hour
}

// GetHourOk returns a tuple with the Hour field value
// and a boolean to check if the value has been set.
func (o *CreateDownloadAlphaInput) GetHourOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hour, true
}

// SetHour sets field value
func (o *CreateDownloadAlphaInput) SetHour(v string) {
	o.Hour = v
}

func (o CreateDownloadAlphaInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDownloadAlphaInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["collectionId"] = o.CollectionId
	toSerialize["hour"] = o.Hour
	return toSerialize, nil
}

type NullableCreateDownloadAlphaInput struct {
	value *CreateDownloadAlphaInput
	isSet bool
}

func (v NullableCreateDownloadAlphaInput) Get() *CreateDownloadAlphaInput {
	return v.value
}

func (v *NullableCreateDownloadAlphaInput) Set(val *CreateDownloadAlphaInput) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDownloadAlphaInput) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDownloadAlphaInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDownloadAlphaInput(
	val *CreateDownloadAlphaInput,
) *NullableCreateDownloadAlphaInput {
	return &NullableCreateDownloadAlphaInput{value: val, isSet: true}
}

func (v NullableCreateDownloadAlphaInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDownloadAlphaInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
