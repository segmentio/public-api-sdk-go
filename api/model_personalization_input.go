/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 61.0.0
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PersonalizationInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PersonalizationInput{}

// PersonalizationInput The Personalization Input Object.
type PersonalizationInput struct {
	Profile Profile `json:"profile"`
	// Entities V2 Object.
	Entities []PersonalizationInputEntity `json:"entities,omitempty"`
	// Sync entity property changes back to Segment. Only applicable if activationType is \"Audience Membership Changed\".
	SyncEntityPropertyChanges *bool `json:"syncEntityPropertyChanges,omitempty"`
}

// NewPersonalizationInput instantiates a new PersonalizationInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersonalizationInput(profile Profile) *PersonalizationInput {
	this := PersonalizationInput{}
	this.Profile = profile
	return &this
}

// NewPersonalizationInputWithDefaults instantiates a new PersonalizationInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersonalizationInputWithDefaults() *PersonalizationInput {
	this := PersonalizationInput{}
	return &this
}

// GetProfile returns the Profile field value
func (o *PersonalizationInput) GetProfile() Profile {
	if o == nil {
		var ret Profile
		return ret
	}

	return o.Profile
}

// GetProfileOk returns a tuple with the Profile field value
// and a boolean to check if the value has been set.
func (o *PersonalizationInput) GetProfileOk() (*Profile, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Profile, true
}

// SetProfile sets field value
func (o *PersonalizationInput) SetProfile(v Profile) {
	o.Profile = v
}

// GetEntities returns the Entities field value if set, zero value otherwise.
func (o *PersonalizationInput) GetEntities() []PersonalizationInputEntity {
	if o == nil || IsNil(o.Entities) {
		var ret []PersonalizationInputEntity
		return ret
	}
	return o.Entities
}

// GetEntitiesOk returns a tuple with the Entities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonalizationInput) GetEntitiesOk() ([]PersonalizationInputEntity, bool) {
	if o == nil || IsNil(o.Entities) {
		return nil, false
	}
	return o.Entities, true
}

// HasEntities returns a boolean if a field has been set.
func (o *PersonalizationInput) HasEntities() bool {
	if o != nil && !IsNil(o.Entities) {
		return true
	}

	return false
}

// SetEntities gets a reference to the given []PersonalizationInputEntity and assigns it to the Entities field.
func (o *PersonalizationInput) SetEntities(v []PersonalizationInputEntity) {
	o.Entities = v
}

// GetSyncEntityPropertyChanges returns the SyncEntityPropertyChanges field value if set, zero value otherwise.
func (o *PersonalizationInput) GetSyncEntityPropertyChanges() bool {
	if o == nil || IsNil(o.SyncEntityPropertyChanges) {
		var ret bool
		return ret
	}
	return *o.SyncEntityPropertyChanges
}

// GetSyncEntityPropertyChangesOk returns a tuple with the SyncEntityPropertyChanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonalizationInput) GetSyncEntityPropertyChangesOk() (*bool, bool) {
	if o == nil || IsNil(o.SyncEntityPropertyChanges) {
		return nil, false
	}
	return o.SyncEntityPropertyChanges, true
}

// HasSyncEntityPropertyChanges returns a boolean if a field has been set.
func (o *PersonalizationInput) HasSyncEntityPropertyChanges() bool {
	if o != nil && !IsNil(o.SyncEntityPropertyChanges) {
		return true
	}

	return false
}

// SetSyncEntityPropertyChanges gets a reference to the given bool and assigns it to the SyncEntityPropertyChanges field.
func (o *PersonalizationInput) SetSyncEntityPropertyChanges(v bool) {
	o.SyncEntityPropertyChanges = &v
}

func (o PersonalizationInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PersonalizationInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["profile"] = o.Profile
	if !IsNil(o.Entities) {
		toSerialize["entities"] = o.Entities
	}
	if !IsNil(o.SyncEntityPropertyChanges) {
		toSerialize["syncEntityPropertyChanges"] = o.SyncEntityPropertyChanges
	}
	return toSerialize, nil
}

type NullablePersonalizationInput struct {
	value *PersonalizationInput
	isSet bool
}

func (v NullablePersonalizationInput) Get() *PersonalizationInput {
	return v.value
}

func (v *NullablePersonalizationInput) Set(val *PersonalizationInput) {
	v.value = val
	v.isSet = true
}

func (v NullablePersonalizationInput) IsSet() bool {
	return v.isSet
}

func (v *NullablePersonalizationInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersonalizationInput(val *PersonalizationInput) *NullablePersonalizationInput {
	return &NullablePersonalizationInput{value: val, isSet: true}
}

func (v NullablePersonalizationInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersonalizationInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
