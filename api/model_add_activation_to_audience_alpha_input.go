/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 59.0.0
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the AddActivationToAudienceAlphaInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddActivationToAudienceAlphaInput{}

// AddActivationToAudienceAlphaInput Input to create an activation.
type AddActivationToAudienceAlphaInput struct {
	// The Destination id.
	DestinationId string `json:"destinationId"`
	// Whether the event emitter should be created in an enabled state. Will trigger an audience run if enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// Whether to perform the first sync so the activation events are generated on the first audience sync.
	PerformFirstSync bool `json:"performFirstSync"`
	// Type of activation trigger.
	ActivationType string `json:"activationType"`
	// Name of the activation.
	ActivationName     string                               `json:"activationName"`
	Personalization    PersonalizationInput                 `json:"personalization"`
	DestinationMapping DestinationSubscriptionConfiguration `json:"destinationMapping"`
}

// NewAddActivationToAudienceAlphaInput instantiates a new AddActivationToAudienceAlphaInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddActivationToAudienceAlphaInput(
	destinationId string,
	performFirstSync bool,
	activationType string,
	activationName string,
	personalization PersonalizationInput,
	destinationMapping DestinationSubscriptionConfiguration,
) *AddActivationToAudienceAlphaInput {
	this := AddActivationToAudienceAlphaInput{}
	this.DestinationId = destinationId
	this.PerformFirstSync = performFirstSync
	this.ActivationType = activationType
	this.ActivationName = activationName
	this.Personalization = personalization
	this.DestinationMapping = destinationMapping
	return &this
}

// NewAddActivationToAudienceAlphaInputWithDefaults instantiates a new AddActivationToAudienceAlphaInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddActivationToAudienceAlphaInputWithDefaults() *AddActivationToAudienceAlphaInput {
	this := AddActivationToAudienceAlphaInput{}
	return &this
}

// GetDestinationId returns the DestinationId field value
func (o *AddActivationToAudienceAlphaInput) GetDestinationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationId
}

// GetDestinationIdOk returns a tuple with the DestinationId field value
// and a boolean to check if the value has been set.
func (o *AddActivationToAudienceAlphaInput) GetDestinationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationId, true
}

// SetDestinationId sets field value
func (o *AddActivationToAudienceAlphaInput) SetDestinationId(v string) {
	o.DestinationId = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *AddActivationToAudienceAlphaInput) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddActivationToAudienceAlphaInput) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *AddActivationToAudienceAlphaInput) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *AddActivationToAudienceAlphaInput) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetPerformFirstSync returns the PerformFirstSync field value
func (o *AddActivationToAudienceAlphaInput) GetPerformFirstSync() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PerformFirstSync
}

// GetPerformFirstSyncOk returns a tuple with the PerformFirstSync field value
// and a boolean to check if the value has been set.
func (o *AddActivationToAudienceAlphaInput) GetPerformFirstSyncOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PerformFirstSync, true
}

// SetPerformFirstSync sets field value
func (o *AddActivationToAudienceAlphaInput) SetPerformFirstSync(v bool) {
	o.PerformFirstSync = v
}

// GetActivationType returns the ActivationType field value
func (o *AddActivationToAudienceAlphaInput) GetActivationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActivationType
}

// GetActivationTypeOk returns a tuple with the ActivationType field value
// and a boolean to check if the value has been set.
func (o *AddActivationToAudienceAlphaInput) GetActivationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActivationType, true
}

// SetActivationType sets field value
func (o *AddActivationToAudienceAlphaInput) SetActivationType(v string) {
	o.ActivationType = v
}

// GetActivationName returns the ActivationName field value
func (o *AddActivationToAudienceAlphaInput) GetActivationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActivationName
}

// GetActivationNameOk returns a tuple with the ActivationName field value
// and a boolean to check if the value has been set.
func (o *AddActivationToAudienceAlphaInput) GetActivationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActivationName, true
}

// SetActivationName sets field value
func (o *AddActivationToAudienceAlphaInput) SetActivationName(v string) {
	o.ActivationName = v
}

// GetPersonalization returns the Personalization field value
func (o *AddActivationToAudienceAlphaInput) GetPersonalization() PersonalizationInput {
	if o == nil {
		var ret PersonalizationInput
		return ret
	}

	return o.Personalization
}

// GetPersonalizationOk returns a tuple with the Personalization field value
// and a boolean to check if the value has been set.
func (o *AddActivationToAudienceAlphaInput) GetPersonalizationOk() (*PersonalizationInput, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Personalization, true
}

// SetPersonalization sets field value
func (o *AddActivationToAudienceAlphaInput) SetPersonalization(v PersonalizationInput) {
	o.Personalization = v
}

// GetDestinationMapping returns the DestinationMapping field value
func (o *AddActivationToAudienceAlphaInput) GetDestinationMapping() DestinationSubscriptionConfiguration {
	if o == nil {
		var ret DestinationSubscriptionConfiguration
		return ret
	}

	return o.DestinationMapping
}

// GetDestinationMappingOk returns a tuple with the DestinationMapping field value
// and a boolean to check if the value has been set.
func (o *AddActivationToAudienceAlphaInput) GetDestinationMappingOk() (*DestinationSubscriptionConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationMapping, true
}

// SetDestinationMapping sets field value
func (o *AddActivationToAudienceAlphaInput) SetDestinationMapping(
	v DestinationSubscriptionConfiguration,
) {
	o.DestinationMapping = v
}

func (o AddActivationToAudienceAlphaInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddActivationToAudienceAlphaInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["destinationId"] = o.DestinationId
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	toSerialize["performFirstSync"] = o.PerformFirstSync
	toSerialize["activationType"] = o.ActivationType
	toSerialize["activationName"] = o.ActivationName
	toSerialize["personalization"] = o.Personalization
	toSerialize["destinationMapping"] = o.DestinationMapping
	return toSerialize, nil
}

type NullableAddActivationToAudienceAlphaInput struct {
	value *AddActivationToAudienceAlphaInput
	isSet bool
}

func (v NullableAddActivationToAudienceAlphaInput) Get() *AddActivationToAudienceAlphaInput {
	return v.value
}

func (v *NullableAddActivationToAudienceAlphaInput) Set(val *AddActivationToAudienceAlphaInput) {
	v.value = val
	v.isSet = true
}

func (v NullableAddActivationToAudienceAlphaInput) IsSet() bool {
	return v.isSet
}

func (v *NullableAddActivationToAudienceAlphaInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddActivationToAudienceAlphaInput(
	val *AddActivationToAudienceAlphaInput,
) *NullableAddActivationToAudienceAlphaInput {
	return &NullableAddActivationToAudienceAlphaInput{value: val, isSet: true}
}

func (v NullableAddActivationToAudienceAlphaInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddActivationToAudienceAlphaInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
