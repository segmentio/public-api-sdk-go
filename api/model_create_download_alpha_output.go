/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 58.10.0
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the CreateDownloadAlphaOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDownloadAlphaOutput{}

// CreateDownloadAlphaOutput struct for CreateDownloadAlphaOutput
type CreateDownloadAlphaOutput struct {
	Download Download `json:"download"`
}

// NewCreateDownloadAlphaOutput instantiates a new CreateDownloadAlphaOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDownloadAlphaOutput(download Download) *CreateDownloadAlphaOutput {
	this := CreateDownloadAlphaOutput{}
	this.Download = download
	return &this
}

// NewCreateDownloadAlphaOutputWithDefaults instantiates a new CreateDownloadAlphaOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDownloadAlphaOutputWithDefaults() *CreateDownloadAlphaOutput {
	this := CreateDownloadAlphaOutput{}
	return &this
}

// GetDownload returns the Download field value
func (o *CreateDownloadAlphaOutput) GetDownload() Download {
	if o == nil {
		var ret Download
		return ret
	}

	return o.Download
}

// GetDownloadOk returns a tuple with the Download field value
// and a boolean to check if the value has been set.
func (o *CreateDownloadAlphaOutput) GetDownloadOk() (*Download, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Download, true
}

// SetDownload sets field value
func (o *CreateDownloadAlphaOutput) SetDownload(v Download) {
	o.Download = v
}

func (o CreateDownloadAlphaOutput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDownloadAlphaOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["download"] = o.Download
	return toSerialize, nil
}

type NullableCreateDownloadAlphaOutput struct {
	value *CreateDownloadAlphaOutput
	isSet bool
}

func (v NullableCreateDownloadAlphaOutput) Get() *CreateDownloadAlphaOutput {
	return v.value
}

func (v *NullableCreateDownloadAlphaOutput) Set(val *CreateDownloadAlphaOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDownloadAlphaOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDownloadAlphaOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDownloadAlphaOutput(
	val *CreateDownloadAlphaOutput,
) *NullableCreateDownloadAlphaOutput {
	return &NullableCreateDownloadAlphaOutput{value: val, isSet: true}
}

func (v NullableCreateDownloadAlphaOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDownloadAlphaOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
