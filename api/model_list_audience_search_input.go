/*
Segment Public API

The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.

API version: 59.2.0
Contact: friends@segment.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ListAudienceSearchInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListAudienceSearchInput{}

// ListAudienceSearchInput Search criteria input for list audience consumers.
type ListAudienceSearchInput struct {
	// Field to filter by.
	Type string `json:"type"`
	// Text to match against the selected field (max 255 characters). When searching by KEY, a prefix match is used. For all other options, a full wildcard search will be used.
	Query string `json:"query"`
}

// NewListAudienceSearchInput instantiates a new ListAudienceSearchInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAudienceSearchInput(type_ string, query string) *ListAudienceSearchInput {
	this := ListAudienceSearchInput{}
	this.Type = type_
	this.Query = query
	return &this
}

// NewListAudienceSearchInputWithDefaults instantiates a new ListAudienceSearchInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAudienceSearchInputWithDefaults() *ListAudienceSearchInput {
	this := ListAudienceSearchInput{}
	return &this
}

// GetType returns the Type field value
func (o *ListAudienceSearchInput) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ListAudienceSearchInput) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ListAudienceSearchInput) SetType(v string) {
	o.Type = v
}

// GetQuery returns the Query field value
func (o *ListAudienceSearchInput) GetQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *ListAudienceSearchInput) GetQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *ListAudienceSearchInput) SetQuery(v string) {
	o.Query = v
}

func (o ListAudienceSearchInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListAudienceSearchInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["query"] = o.Query
	return toSerialize, nil
}

type NullableListAudienceSearchInput struct {
	value *ListAudienceSearchInput
	isSet bool
}

func (v NullableListAudienceSearchInput) Get() *ListAudienceSearchInput {
	return v.value
}

func (v *NullableListAudienceSearchInput) Set(val *ListAudienceSearchInput) {
	v.value = val
	v.isSet = true
}

func (v NullableListAudienceSearchInput) IsSet() bool {
	return v.isSet
}

func (v *NullableListAudienceSearchInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAudienceSearchInput(
	val *ListAudienceSearchInput,
) *NullableListAudienceSearchInput {
	return &NullableListAudienceSearchInput{value: val, isSet: true}
}

func (v NullableListAudienceSearchInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAudienceSearchInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
